name: CI/CD Pipeline

# ------------------------------------------------------------------
# 1. Trigger Configuration
# Runs on push or pull request to the main branch
# ------------------------------------------------------------------
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # ------------------------------------------------------------------
  # Job 1: Build, Test, and Database Check
  # This verifies the code works and the web application builds successfully.
  # ------------------------------------------------------------------
  ci_checks:
    name: Build, Test & DB Check
    runs-on: ubuntu-latest
    
    # Set up a temporary PostgreSQL service for testing
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Setup Bun Runtime
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install Dependencies
        run: bun install
      
      - name: Wait for Postgres DB to be Ready
        run: sleep 5
      
      # Run tests against the local test database
      - name: Run Tests
        run: bun test
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db
      
      # Build the Next.js application (Crucial Web Deployment Check)
      - name: Build Next.js Application
        run: bun run build
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/test_db

  # ------------------------------------------------------------------
  # Job 2: Build Docker Image and Push to Docker Hub
  # This runs only on successful push to main branch.
  # ------------------------------------------------------------------
  deploy:
    name: Docker Build & Push
    runs-on: ubuntu-latest
    needs: ci_checks # Must succeed before deploying
    
    # Only run this step if we are pushing to the main branch
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      # Set up QEMU and Buildx for wider platform compatibility
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      # Log in to Docker Hub using GitHub Secrets
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          # --- CORRECTED SECRET NAMES BELOW ---
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
      # Build the image and push it to the remote registry with the 'latest' tag
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          # Builds for both AMD64 and ARM64 platforms
          platforms: linux/amd64,linux/arm64 
          push: true
          # Use the simple 'latest' tag for deployment
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/next-self-host:latest
          # --- ADDED ARGS FOR DOCKER BUILD TO RESOLVE DATABASE_URL ERROR ---
          build-args: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}
